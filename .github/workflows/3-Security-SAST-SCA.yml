name: 3-Security-SAST-SCA-SBOM

# This Workflow will submit the application artifact to Veracode for SAST and SCA scan
# It will run manually or automatically after 1-Checkout-Build-Artifact.yml completes.

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["2-Build & Publish Docker Image"]
    types:
      - completed

jobs:
  Security-Scan-SAST-SCA:
    runs-on: ubuntu-latest
    steps:
# Checkout code
      - uses: actions/checkout@v2
# Download the most recent build artifact from the 1-Checkout-Build-Artifact worfklow.
      - name: Download Checkout-Build-Artifact Workflow Artifact
        uses: qiwi-forks/action-download-artifact@v2
        with: 
         github_token: ${{secrets.GITHUB_TOKEN}}
         workflow: 1-Checkout-Build-Artifact.yml
         name: petstore-api-python
         skip_unpack: true
        continue-on-error: false

# Listing the folder contents is very handy for troubleshooting      
      - name: List folder contents for visual to confirm artifact file exists
        run: |
         ls -la

# Use the UploadAndScan action to submit the artifact for scanning
      - name: Veracode Upload and Scan Action Step
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          appname: 'PetstoreAPI-Python-GitHub'
          createprofile: false
          version: '${{ github.run_id }}'
          criticality: Medium
          filepath: 'petstore-api-python.zip'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
        continue-on-error: true

# Synch Issues into GitHub Issues.  This will synch the issues from the most recent completed SAST Policy scan.
# This is fine for most, see more advanced workflow to get more instant feedback if needed.
  Synch-Issues-to-GitHub:
    runs-on: ubuntu-latest
    container: 
      image: veracode/api-signing:latest
    steps:
      - name: Get SAST Policy flaws
        run: |
          cd /tmp
          export VERACODE_API_KEY_ID=${{ secrets.VERACODE_API_ID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.VERACODE_API_KEY }}
          guid=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications?name=PetstoreAPI-Python-GitHub" | jq -r '._embedded.applications[0].guid') 
          echo GUID: ${guid}
          total_flaws=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo TOTAL_FLAWS: ${total_flaws}
          http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" > policy_flaws.json
          
      - name: Synch SAST Security Issues to GitHub Issues
        uses: veracode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: '/tmp/policy_flaws.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}     

  Container-Inspection-SBOM:
    runs-on: ubuntu-latest
    steps:
      - name: Veracode Container Scanner
        run: |
          mkdir tmp
          cd tmp
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          export VERACODE_API_KEY_ID=${{ secrets.VERACODE_API_ID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.VERACODE_API_KEY }}
          ls -la
          ./veracode sbom --source veracodedemolabs/petstore_api_python_github:latest --type image --format table -o SBOM.txt
# Need to add this to the above:           ./veracode scan --source /home/runner/work/petstore-api-python/petstore-api-python --type directory --format table -o IssuesSource.txt
# Store security artifacts
      - name: Upload security artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: SecurityArtifacts
          path: ./tmp/*.txt     
          
